#Currency Converter
#George Foulds

from PyQt4 import QtCore, QtGui
import sys


class gui(QtGui.QMainWindow):

    def __init__(self):
        super(gui, self).__init__()

        self.entry1 = 0
        self.entry2 = 0
        self.currency2 = "USD"
        self.conversionrate = 1.5  #gbp conversion rate
        self.converted = 0  #the conversion output

        self.initUI()

    def onActivated(self, text):  #selects conversion rate depending on currency combobox
        currency = text
        if currency == 'USD'():
            self.conversionrate = 1.5

    def convert(self):  #converts from gbp to selected currency
        amount = int(self.entry1.text())
        self.converted = amount * self.conversionrate
        self.entry2.setText(str(self.converted))  #updates output display

    def initUI(self):  #creates gui

        self.setGeometry(300, 300, 140, 150)
        self.setWindowTitle('Currency Converter')
        self.setWindowIcon(QtGui.QIcon('cashicon.png'))

        l1 = QtGui.QLabel(self)
        l1.move(25, 5)
        l1.setText('Convert')

        currency1 = QtGui.QLabel(self)
        currency1.setText('GBP')
        currency1.move(35, 30)

        l2 = QtGui.QLabel(self)
        l2.move(37, 53)
        l2.setText('to')

        self.currency2 = QtGui.QComboBox(self)  #allows for selection of currency to convert to
        self.currency2.addItem("USD")
        self.currency2.setGeometry(300, 300, 50, 25)
        self.currency2.move(20, 80)
        self.currency2.activated[str].connect(self.onActivated)

        self.entry1 = QtGui.QLineEdit(self)  #allows for entry of value the user wants to convert
        self.entry1.setGeometry(300, 300, 50, 25)
        self.entry1.move(75, 31)

        self.entry2 = QtGui.QLineEdit(self)  #displays the converted output
        self.entry2.setGeometry(300, 300, 50, 25)
        self.entry2.move(75, 81)
        self.entry2.setText(str(self.converted))

        butt1 = QtGui.QPushButton('Go!', self)  #initialises conversion when clicked
        butt1.setGeometry(300, 300, 105, 25)
        butt1.move(20, 110)
        butt1.clicked.connect(self.convert)

        self.show()


def main():

    app = QtGui.QApplication(sys.argv)
    ex = gui()
    sys.exit(app.exec_())

if __name__ == '__main__':
    main()
