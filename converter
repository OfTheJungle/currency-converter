# Currency Converter
# George Foulds

from PyQt4 import QtGui
import sys
import json
from urllib import urlopen


class Gui(QtGui.QMainWindow):

    def __init__(self):
        super(Gui, self).__init__()

        self.entry1 = 0
        self.entry2 = 0
        self.currency2 = ''
        self.url = urlopen('http://api.fixer.io/latest?base=GBP').read()
        self.result = json.loads(self.url)
        self.conversionrate = 0
        self.converted = 0
        self.url = 'http://api.fixer.io/latest?symbols=GBP,USD'

        self.initui()

# Selects conversion rate depending on currency combobox
    def onactivated(self, text):
        currency = text
        if currency == 'USD':
            self.conversionrate = float(self.result['rates']['USD'])
        if currency == 'EUR':
            self.conversionrate = float(self.result['rates']['EUR'])
        if currency == 'JPY':
            self.conversionrate = float(self.result['rates']['JPY'])

# Converts from gbp to selected currency
    def convert(self):
        amount = int(self.entry1.text())
        self.converted = amount * self.conversionrate
        self.entry2.setText(str(self.converted))  # Updates output display

# Creates gui
    def initui(self):

        self.setGeometry(300, 300, 140, 150)
        self.setWindowTitle('Currency Converter')
        self.setWindowIcon(QtGui.QIcon('cashicon.png'))

        l1 = QtGui.QLabel(self)
        l1.move(25, 5)
        l1.setText('Convert')

        currency1 = QtGui.QLabel(self)
        currency1.setText('GBP')
        currency1.move(35, 30)

        l2 = QtGui.QLabel(self)
        l2.move(37, 53)
        l2.setText('to')

        self.currency2 = QtGui.QComboBox(self)
        self.currency2.addItem('')  # Default
        self.currency2.addItem('USD')
        self.currency2.addItem('EUR')
        self.currency2.addItem('JPY')
        self.currency2.setGeometry(300, 300, 50, 25)
        self.currency2.move(20, 80)
        self.currency2.activated[str].connect(self.onactivated)

        self.entry1 = QtGui.QLineEdit(self)
        self.entry1.setGeometry(300, 300, 50, 25)
        self.entry1.move(75, 31)

        self.entry2 = QtGui.QLineEdit(self)
        self.entry2.setGeometry(300, 300, 50, 25)
        self.entry2.move(75, 81)
        self.entry2.setText(str(self.converted))

        butt1 = QtGui.QPushButton('Go!', self)
        butt1.setGeometry(300, 300, 105, 25)
        butt1.move(20, 110)
        butt1.clicked.connect(self.convert)

        self.show()


def main():

    app = QtGui.QApplication(sys.argv)
    ex = Gui()
    sys.exit(app.exec_())

if __name__ == '__main__':
    main()
